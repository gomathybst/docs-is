openapi: "3.0.1"
info:
  title: "be-entity-app-staging"
  version: "1.0"
servers:
- url: "https://yd89jp4mk3.execute-api.eu-west-1.amazonaws.com/{basePath}"
  variables:
    basePath:
      default: "/staging"
paths:
  /documents/{entity_id}:
    get:
      parameters:
      - name: "entity_id"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:606438480380:function:be-entity-app-staging-Documents-1P1D84XI2H36Z/invocations"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"
    options:
      parameters:
      - name: "entity_id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /{proxy+}:
    options:
      parameters:
      - name: "proxy"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
        type: "mock"
    x-amazon-apigateway-any-method:
      parameters:
      - name: "proxy"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:606438480380:function:be-entity-app-staging-BeEntity-4029OOHZD7O1/invocations"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"
components: {}
x-amazon-apigateway-policy:
  Version: "2012-10-17"
  Statement:
  - Effect: "Deny"
    Principal: "*"
    Action: "execute-api:Invoke"
    Resource: "arn:aws:execute-api:eu-west-1:606438480380:*/*"
    Condition:
      StringNotEquals:
        aws:sourceVpce:
        - "vpce-0fd1bf3137ada5ed3"
        - "vpce-0fedcb921d5cdbbb7"
        - "vpce-071cf648ed1871407"
        - "vpce-0108cea8d78c6ef3d"
        - "vpce-033034da2c4fa0ceb"
        - "vpce-06f6f62627969466a"
        - "vpce-052a4c0b6018dbc5c"
        - "vpce-005ec66c65a1e70e8"
        - "vpce-012f6de9a34294b1e"
        - "vpce-0e0c304f63abd6e2e"
        - "vpce-0cbf8f57ac887ba22"
        - "vpce-037729e8a4c43bcf7"
        - "vpce-0e42c3502868212d2"
        - "vpce-0864f192143fecb61"
        - "vpce-06412274aeb74714e"
        - "vpce-09b5fccd4e984c23e"
        - "vpce-0431c37f200f5fc56"
        - "vpce-0330021fa22a39359"
        - "vpce-031b1764bdc3a5913"
        - "vpce-03667a3f16b6d20e2"
        - "vpce-0ac68e20a4834acfa"
        - "vpce-05e449a71dd61d946"
  - Effect: "Allow"
    Principal: "*"
    Action: "execute-api:Invoke"
    Resource: "arn:aws:execute-api:eu-west-1:606438480380:*/*"
    Condition:
      StringEquals:
        aws:sourceVpce:
        - "vpce-0fd1bf3137ada5ed3"
        - "vpce-0fedcb921d5cdbbb7"
        - "vpce-071cf648ed1871407"
        - "vpce-0108cea8d78c6ef3d"
        - "vpce-033034da2c4fa0ceb"
        - "vpce-06f6f62627969466a"
        - "vpce-052a4c0b6018dbc5c"
        - "vpce-005ec66c65a1e70e8"
        - "vpce-012f6de9a34294b1e"
        - "vpce-0e0c304f63abd6e2e"
        - "vpce-0cbf8f57ac887ba22"
        - "vpce-037729e8a4c43bcf7"
        - "vpce-0e42c3502868212d2"
        - "vpce-0864f192143fecb61"
        - "vpce-06412274aeb74714e"
        - "vpce-09b5fccd4e984c23e"
        - "vpce-0431c37f200f5fc56"
        - "vpce-0330021fa22a39359"
        - "vpce-031b1764bdc3a5913"
        - "vpce-03667a3f16b6d20e2"
        - "vpce-0ac68e20a4834acfa"
        - "vpce-05e449a71dd61d946"
